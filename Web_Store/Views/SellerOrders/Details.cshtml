@model Web_Store.Models.Order
@using Web_Store.Models.Enums

@{
    ViewData["Title"] = "Szczegóły";
}

<h1>Szczegóły zamówienia</h1>

<div>
    
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            Imię i nazwisko
        </dt>
        <dd class = "col-sm-10">
            @Model.Buyer.FirstName @Model.Buyer.LastName
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Buyer.Email)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Buyer.Email)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
            
            @using (Html.BeginForm("EditStatus", "SellerOrders", FormMethod.Post))
            {
                <input asp-for="Id" class="form-control" hidden />
                <input asp-for="Address" class="form-control" hidden />
                <input asp-for="Buyer" class="form-control" hidden />
                <input asp-for="BuyerId" class="form-control" hidden />

                @if (Model.Status == OrderStatus.PrzyjęteDoRealizacji)
                {
                    <button formmethod="post" class="btn btn-primary" name="@Html.NameFor(model => model.Status)" value="@(nameof(OrderStatus.WTrakcieRealizacji))")>W trakcie</button>
                }
                @if (Model.Status == OrderStatus.WTrakcieRealizacji)
                {
                    <button formmethod="post" class="btn btn-primary" name="@Html.NameFor(model => model.Status)" value="@(nameof(OrderStatus.Wysłane))")>Wysłane</button>
                }
                @if (Model.Status == OrderStatus.Wysłane)
                {
                    <button formmethod="post" class="btn btn-primary" name="@Html.NameFor(model => model.Status)" value="@(nameof(OrderStatus.Dostarczone))")>Dostarczone</button>
                }
                @if (Model.Status is not OrderStatus.Dostarczone and not OrderStatus.Anulowane)
                {
                    <button formmethod="post" class="btn btn-danger" name="@Html.NameFor(model => model.Status)" value="@(nameof(OrderStatus.Anulowane))")>REMOVE</button>
                }
                
                
            }
        </dd>
    </dl>
</div>
<table class="table">
<thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrderEntries.GetEnumerator().Current.ProductNameAtPurchase)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderEntries.GetEnumerator().Current.UnitPriceAtPurchase)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderEntries.GetEnumerator().Current.Quantity)
        </th>
    </tr>
</thead>
<tbody>
    @foreach (var orderEntry in Model.OrderEntries)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => orderEntry.ProductNameAtPurchase)
            </td>
            <td>
                @Html.DisplayFor(modelItem => orderEntry.UnitPriceAtPurchase)
            </td>
            <td>
                @Html.DisplayFor(modelItem => orderEntry.Quantity)
            </td>
        </tr>
    }
</tbody>
</table>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
