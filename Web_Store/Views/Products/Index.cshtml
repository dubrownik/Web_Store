@model IEnumerable<Web_Store.Models.Product>

@{
    ViewData["Title"] = "Dostępne produkty";
}

<h1>Dostępne produkty</h1>

<p>

    @if (User.IsInRole("Admin") | User.IsInRole("Seller"))
    {
        <a asp-action="Create">
            <input value="Create New" class="btn btn-primary" />
        </a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PictureFile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                Sprzedawca
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (String.IsNullOrEmpty(item.PictureLink))
                {
                    <td>
                        Brak obrazka
                    </td>
                }
                else
                {
                    <td>
                        <a href="images/@Html.DisplayFor(modelItem => item.PictureLink)" target=”_blank”>
                            <img src="images/@Html.DisplayFor(modelItem => item.PictureLink)" style="height: 200px; width: 200px;" class="rounded"><br>
                        </a>
                    </td>
                }
                
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @String.Concat(item.Seller.FirstName, " ", item.Seller.LastName.ToString().Substring(0, 1))
                </td>
                <td>
                    @if (User.IsInRole("Admin") | (User.IsInRole("Seller") && String.Equals(ViewData["UserID"], item.SellerId)))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <span>|</span>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                    @if (User.IsInRole("Admin") | (User.IsInRole("Seller") && String.Equals(ViewData["UserID"], item.SellerId)))
                    {
                        <span>|</span> <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    @if (User.IsInRole("Buyer"))
                    {
                        <span>|</span>
                        <partial name="_BuyPartial" model="@new CartEntry { ProductId = item.Id, Quantity=1 }" />
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
